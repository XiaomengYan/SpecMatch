// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// StarletWT
arma::mat StarletWT(arma::vec X);
RcppExport SEXP _SpecMatch_StarletWT(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(StarletWT(X));
    return rcpp_result_gen;
END_RCPP
}
// StarletRC
arma::mat StarletRC(arma::mat X);
RcppExport SEXP _SpecMatch_StarletRC(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(StarletRC(X));
    return rcpp_result_gen;
END_RCPP
}
// PMT
Rcpp::List PMT(arma::vec X);
RcppExport SEXP _SpecMatch_PMT(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(PMT(X));
    return rcpp_result_gen;
END_RCPP
}
// PMTRC
arma::mat PMTRC(arma::mat C, arma::vec V);
RcppExport SEXP _SpecMatch_PMTRC(SEXP CSEXP, SEXP VSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type C(CSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type V(VSEXP);
    rcpp_result_gen = Rcpp::wrap(PMTRC(C, V));
    return rcpp_result_gen;
END_RCPP
}
// MultiResSuppPMT
arma::mat MultiResSuppPMT(arma::vec X, int SimNo);
RcppExport SEXP _SpecMatch_MultiResSuppPMT(SEXP XSEXP, SEXP SimNoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type SimNo(SimNoSEXP);
    rcpp_result_gen = Rcpp::wrap(MultiResSuppPMT(X, SimNo));
    return rcpp_result_gen;
END_RCPP
}
// MultiResSuppStarlet
arma::mat MultiResSuppStarlet(arma::vec X, int SimNo);
RcppExport SEXP _SpecMatch_MultiResSuppStarlet(SEXP XSEXP, SEXP SimNoSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type X(XSEXP);
    Rcpp::traits::input_parameter< int >::type SimNo(SimNoSEXP);
    rcpp_result_gen = Rcpp::wrap(MultiResSuppStarlet(X, SimNo));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SpecMatch_StarletWT", (DL_FUNC) &_SpecMatch_StarletWT, 1},
    {"_SpecMatch_StarletRC", (DL_FUNC) &_SpecMatch_StarletRC, 1},
    {"_SpecMatch_PMT", (DL_FUNC) &_SpecMatch_PMT, 1},
    {"_SpecMatch_PMTRC", (DL_FUNC) &_SpecMatch_PMTRC, 2},
    {"_SpecMatch_MultiResSuppPMT", (DL_FUNC) &_SpecMatch_MultiResSuppPMT, 2},
    {"_SpecMatch_MultiResSuppStarlet", (DL_FUNC) &_SpecMatch_MultiResSuppStarlet, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SpecMatch(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
